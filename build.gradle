buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

apply plugin: 'com.moowork.node'

group = 'no.ayyanarn.springreact'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

repositories.whenObjectAdded {
    if (it instanceof IvyArtifactRepository) {
        metadataSources {
            artifact()
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

node {

// Base URL for fetching node distributions (change if you have a mirror).
// distBaseUrl = 'https://nodejs.org/dist'

// If true, it will download node using above parameters.
// If false, it will try to use globally installed node.
    download = true

// Set the work directory for unpacking node
    workDir = file("${project.projectDir}/src/main/webapp/nodejs")

// Set the work directory for NPM
    npmWorkDir = file("${project.projectDir}/src/main/webapp/npm")

// Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/src/main/webapp")
}

task npmInstallDependencies(type: NpmTask) {
    dependsOn 'npmSetup'
    execOverrides {
        it.ignoreExitValue = false
        it.workingDir = 'src/main/webapp'
    }
    args = ['install']
}

task npmBuild(type: NpmTask) {
    dependsOn 'npmInstallDependencies'
    def profile = "web-build-$env";
    execOverrides {
         //it.ignoreExitValue = false
        it.workingDir = 'src/main/webapp'
    }
    args = ['run', profile]
}

task copyFrontendToBuild(type: Copy) {
    dependsOn 'npmBuild'

    from("$projectDir/src/main/webapp/build/index.html") {
        rename("index.html", "home.html")
    }
    from("$projectDir/src/main/webapp/build")
    into("$projectDir/src/main/resources/static")
}

processResources {
    dependsOn 'copyFrontendToBuild'
}
